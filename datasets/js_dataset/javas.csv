0,nlp language,target_variable
1,Create a variable named variableName and assign it the value value.,let variableName = value;
2,"Check if a condition is true, perform actionIfTrue if true, and actionIfFalse if false.",if (condition) { actionIfTrue; } else { actionIfFalse; }
3,Repeat a set of actions a specified number of times based on the value of length.,for (let i = 0; i < length; i++) { // loop actions }
4,Repeat a set of actions as long as a certain condition is true.,while (condition) { // loop actions }
5,Define a reusable function called functionName that can take parameters and execute a specific block of code.,function functionName(parameters) { // function body }
6,Call a function named functionName and provide specific arguments to it.,functionName(arguments);
7,Create an arrow function named functionName that can accept parameters and execute a specific block of code.,const functionName = (parameters) => { // function body };
8,Create an object obj with properties property1 and property2 having values value1 and value2 respectively.,"const obj = { property1: value1, property2: value2 };"
9,Access a specific property stored in an object.,object.property;
10,Create an array arr containing the specified values.,"const arr = [value1, value2, ...];"
11,Access the value at a particular index within an array.,array[index];
12,Make an HTTP request to retrieve or send data to a server using the XMLHttpRequest object.,AJAX using XMLHttpRequest:
13,Send an HTTP request and handle the response using the modern fetch API.,AJAX using fetch API:
14,Create a variable to store a number.,let num = 42;
15,Check if the temperature is above 30 degrees.,if (temperature > 30) { /* actions */ }
16,Repeat a block of code 10 times.,for (let i = 0; i < 10; i++) { /* loop actions */ }
17,Repeat a block of code while the user is logged in.,while (isLoggedIn) { /* loop actions */ }
18,Define a function to greet a user.,function greetUser(name) { /* function body */ }
19,Call a function to calculate the sum of two numbers.,"const sum = calculateSum(10, 20);"
20,Create an arrow function to double a number.,const double = (num) => num * 2;
21,Create an object to store a person's information.,"const person = { name: 'John', age: 30 };"
22,Access the 'name' property of the person object.,const personName = person.name;
23,Create an array of colors.,"const colors = ['red', 'green', 'blue'];"
24,"If it's raining, display a message.",if (isRaining) { console.log('Take an umbrella.'); }
25,Loop through an array of names and print each name.,for (let i = 0; i < names.length; i++) { console.log(names[i]); }
26,Repeat a block of code until a condition is met.,do { /* loop actions */ } while (condition);
27,Define a function to calculate the square of a number.,function calculateSquare(num) { return num * num; }
28,Call a function to calculate the factorial of a number.,const factorial = calculateFactorial(5);
29,Create a simple arrow function.,const greet = () => console.log('Hello!');
30,Create an object with nested properties.,"const person = { name: { first: 'John', last: 'Doe' } };"
31,Access a deeply nested property within an object.,const lastName = person.name.last;
32,Create an array of numbers.,"const numbers = [1, 2, 3, 4, 5];"
33,Access the third element in an array.,const thirdElement = numbers[2];
34,"If a user is logged in, display a welcome message.","if (isLoggedIn) { console.log('Welcome, User!'); }"
35,Iterate over an array of items and perform actions.,items.forEach(item => { /* actions with item */ });
36,Repeat a block of code for a specific duration.,const endTime = Date.now() + 5000; while (Date.now() < endTime) { /* loop actions */ }
37,Define a function to concatenate two strings.,"function concatenateStrings(str1, str2) { return str1 + str2; }"
38,Call a function to calculate the product of two numbers.,"const product = calculateProduct(10, 5);"
39,Create an arrow function to calculate the cube of a number.,const cube = (num) => num * num * num;
40,Create an array of fruits.,"const fruits = ['apple', 'banana', 'orange'];"
41,Access the length of an array.,const arrayLength = fruits.length;
42,Create an object representing a car.,"const car = { brand: 'Toyota', model: 'Corolla' };"
43,Access a specific property of a car object.,const carBrand = car.brand;
44,Check if a given number is even.,if (number % 2 === 0) { /* actions */ }
45,Iterate through an array of names and greet each person.,"names.forEach(name => console.log('Hello, ' + name));"
46,Execute a block of code based on a switch case.,switch (day) { case 'Monday': /* actions */ break; case 'Tuesday': /* actions */ break; default: /* default actions */ }
47,Define a function to calculate the area of a circle.,function calculateCircleArea(radius) { return Math.PI * radius * radius; }
48,Call a function to calculate the square root of a number.,const squareRoot = calculateSquareRoot(25);
49,Create a function that adds two numbers and returns the result.,"function addNumbers(a, b) { return a + b; }"
50,Create an object representing a book.,"const book = { title: 'The Great Gatsby', author: 'F. Scott Fitzgerald' };"
51,Access a property of a book object.,const bookTitle = book.title;
52,Create an array of cities.,"const cities = ['New York', 'London', 'Paris'];"
53,Access the first element in an array.,const firstCity = cities[0];
54,Check if a given string contains a specific substring.,if (str.includes('substring')) { /* actions */ }
55,Iterate through an array of numbers and calculate the sum.,let sum = 0; numbers.forEach(num => sum += num);
56,Execute a block of code based on multiple conditions.,if (condition1) { /* actions */ } else if (condition2) { /* actions */ } else { /* actions */ }
57,Define a function to generate a random number.,function generateRandomNumber() { return Math.random(); }
58,Call a function to generate a random color.,const randomColor = generateRandomColor();
59,Create a function that subtracts two numbers and returns the result.,"function subtractNumbers(a, b) { return a - b; }"
60,Create an object representing a laptop.,"const laptop = { brand: 'Dell', model: 'XPS 13' };"
61,Access a property of a laptop object.,const laptopModel = laptop.model;
62,Create an array of programming languages.,"const languages = ['JavaScript', 'Python', 'Java'];"
63,Access the last element in an array.,const lastLanguage = languages[languages.length - 1];
64,Check if a given number is positive.,if (number > 0) { /* actions */ }
65,Iterate through an array of objects and perform actions.,for (const obj of arrayOfObjects) { /* actions with obj */ }
66,Execute a block of code based on nested conditions.,if (condition1) { if (condition2) { /* actions */ } else { /* actions */ } } else { /* actions */ }
67,Define a function to round a number to the nearest integer.,function roundToNearestInteger(num) { return Math.round(num); }
68,Call a function to generate a random username.,const randomUsername = generateRandomUsername();
69,Create a function that multiplies two numbers and returns the result.,"function multiplyNumbers(a, b) { return a * b; }"
70,Create an object representing a smartphone.,"const smartphone = { brand: 'Samsung', model: 'Galaxy S20' };"
71,Access a property of a smartphone object.,const smartphoneBrand = smartphone.brand;
72,Create an array of programming frameworks.,"const frameworks = ['React', 'Angular', 'Vue'];"
73,Access the second element in an array.,const secondFramework = frameworks[1];
74,Check if a given string is empty.,if (str === '') { /* actions */ }
75,Iterate through an array of objects and filter based on a condition.,const filteredObjects = arrayOfObjects.filter(obj => obj.property === value);
76,Execute a block of code based on a try-catch structure.,try { /* actions that may throw errors */ } catch (error) { /* actions to handle errors */ }
77,Define a function to calculate the factorial of a number.,function calculateFactorial(num) { /* factorial calculation */ }
78,Call a function to fetch data from an API.,fetchDataFromAPI();
79,Create a function that divides two numbers and returns the result.,"function divideNumbers(a, b) { return a / b; }"
80,Create an object representing a musical instrument.,"const instrument = { type: 'Guitar', brand: 'Fender' };"
81,Access a property of a musical instrument object.,const instrumentType = instrument.type;
82,Create an array of book genres.,"const bookGenres = ['Mystery', 'Fantasy', 'Romance'];"
83,Access the third element in an array.,const thirdGenre = bookGenres[2];
84,Check if a given number is greater than another number.,if (num1 > num2) { /* actions */ }
85,Iterate through an array of numbers and calculate the product.,"const product = numbers.reduce((acc, num) => acc * num, 1);"
86,Execute a block of code based on a ternary operator.,const result = condition ? /* actions if true */ : /* actions if false */;
87,Define a function to convert temperature from Celsius to Fahrenheit.,function celsiusToFahrenheit(celsius) { return (celsius * 9/5) + 32; }
88,Call a function to display a popup message.,displayPopup('Hello World!');
89,Create a function that checks if a number is prime.,function isPrime(num) { /* prime check */ }
90,Create an object representing a car.,"const car = { make: 'Toyota', model: 'Camry' };"
91,Access a property of a car object.,const carMake = car.make;
92,Create an array of color names.,"const colors = ['Red', 'Green', 'Blue'];"
93,Access the fourth element in an array.,const fourthColor = colors[3];
94,Check if a given variable is defined.,if (typeof variable !== 'undefined') { /* actions */ }
95,Iterate through an array of strings and concatenate them.,const concatenatedString = arrayOfStrings.join('');
96,Execute a block of code based on a switch case.,switch (variable) { case 'value1': /* actions */ break; case 'value2': /* actions */ break; default: /* actions */ }
97,Define a function to calculate the area of a rectangle.,"function calculateRectangleArea(length, width) { return length * width; }"
98,Call a function to update a user's profile.,"updateUserProfile(userId, updatedData);"
99,Create a function that finds the maximum number in an array.,function findMaxNumber(numbers) { return Math.max(...numbers); }
100,Create an object representing a book.,"const book = { title: 'The Great Gatsby', author: 'F. Scott Fitzgerald' };"
101,Access a property of a book object.,const bookTitle = book.title;
102,Create an array of flower names.,"const flowers = ['Rose', 'Tulip', 'Sunflower'];"
103,Access the fifth element in an array.,const fifthFlower = flowers[4];
104,Check if a given array is empty.,if (array.length === 0) { /* actions */ }
105,Iterate through an array of numbers and find the sum.,"const sum = numbers.reduce((acc, num) => acc + num, 0);"
106,Execute a block of code based on a truthy or falsy condition.,if (variable) { /* actions if truthy */ } else { /* actions if falsy */ }
107,Define a function to calculate the square of a number.,function square(num) { return num * num; }
108,Call a function to log a message to the console.,logMessage('This is a log message.');
109,Create a function that sorts an array of numbers in ascending order.,"function sortNumbersAscending(numbers) { return numbers.sort((a, b) => a - b); }"
110,Create an object representing a computer.,"const computer = { brand: 'Dell', model: 'XPS 13' };"
111,Access a property of a computer object.,const computerBrand = computer.brand;
112,Create an array of country names.,"const countries = ['USA', 'Canada', 'Australia'];"
113,Access the sixth element in an array.,const sixthCountry = countries[5];
114,Check if a given string is empty or whitespace.,if (!str.trim()) { /* actions */ }
115,Iterate through an array of objects and extract a specific property.,const propertyArray = arrayOfObjects.map(obj => obj.property);
116,Execute a block of code based on multiple conditions using logical operators.,```if (condition1 && condition2) { /* actions */ } else if (condition3
117,Define a function to calculate the hypotenuse of a right-angled triangle.,"function calculateHypotenuse(a, b) { return Math.sqrt(a * a + b * b); }"
118,Call a function to fetch data from an API.,fetchDataFromAPI('https://api.example.com/data');
119,Create a function that converts a string to uppercase.,function convertToUppercase(str) { return str.toUpperCase(); }
120,Create an object representing a smartphone.,"const smartphone = { brand: 'Samsung', model: 'Galaxy S21' };"
121,Access a property of a smartphone object.,const smartphoneModel = smartphone.model;
123,Create an array of city names.,"const cities = ['New York', 'London', 'Tokyo'];"
124,Access the seventh element in an array.,const seventhCity = cities[6];
125,Check if a number is even or odd.,const isEven = num % 2 === 0; /* or check odd: num % 2 !== 0 */
126,Iterate through an array and perform an action for each element.,arrayOfItems.forEach(item => { /* action for each item */ });
127,"Execute a block of code if a condition is met, otherwise execute another block.",condition ? /* actions if true */ : /* actions if false */
128,Define a function to generate a random number within a specified range.,"function getRandomNumber(min, max) { return Math.random() * (max - min) + min; }"
129,Call a function to show a pop-up message.,"showPopup('Hello, World!');"
130,Create a function that reverses a string.,function reverseString(str) { return str.split('').reverse().join(''); }
131,Create an object representing a car.,"const car = { make: 'Toyota', model: 'Corolla' };"
132,Access a property of a car object.,const carMake = car.make;
133,Create an array of programming languages.,"const languages = ['JavaScript', 'Python', 'Java'];"
134,Access the eighth element in an array.,const eighthLanguage = languages[7];
135,Check if a string contains a specific substring.,if (str.includes('substring')) { /* actions */ }
136,Iterate through an array and filter out elements based on a condition.,const filteredArray = arrayOfElements.filter(element => /* condition */);
137,Execute a block of code repeatedly for a specified number of times.,for (let i = 0; i < numberOfTimes; i++) { /* actions */ }
138,Define a function to calculate the factorial of a number.,```function calculateFactorial(num) { if (num === 0
139,Call a function to perform an animation.,animateElement('elementId');
140,Create a function that truncates a string to a specified length.,"function truncateString(str, maxLength) { return str.length > maxLength ? str.slice(0, maxLength) + '...' : str; }"
141,Create an object representing a book.,"const book = { title: 'The Great Gatsby', author: 'F. Scott Fitzgerald' };"
142,Access a property of a book object.,const bookTitle = book.title;
143,Create an array of fruit names.,"const fruits = ['Apple', 'Banana', 'Orange'];"
144,Access the ninth element in an array.,const ninthFruit = fruits[8];
145,"Check if a number is positive, negative, or zero.",const numberType = num > 0 ? 'positive' : num < 0 ? 'negative' : 'zero';
146,Iterate through an array and perform a transformation on each element.,const transformedArray = arrayOfNumbers.map(number => number * 2);
147,"Execute a block of code if a condition is met, otherwise execute another block.",condition ? /* actions if true */ : /* actions if false */
148,Define a function to find the maximum value in an array.,function findMax(arr) { return Math.max(...arr); }
149,Call a function to send an HTTP request and handle the response.,"sendHTTPRequest('GET', 'https://api.example.com/data', handleResponse);"
150,Create a function that sorts an array in ascending order.,"function sortArrayAscending(arr) { return arr.slice().sort((a, b) => a - b); }"
151,Create an object representing a person.,"const person = { firstName: 'John', lastName: 'Doe', age: 30 };"
152,Access a property of a person object.,const personAge = person.age;
153,Create an array of city names.,"const cities = ['Paris', 'Tokyo', 'New York'];"
154,Access the tenth element in an array.,const tenthCity = cities[9];
155,Check if a given number is within a specified range.,"const isWithinRange = (num, min, max) => num >= min && num <= max;"
156,Iterate through an array and find the sum of all elements.,"const sum = arrayOfNumbers.reduce((total, num) => total + num, 0);"
157,Execute a block of code based on a switch case.,switch (condition) { case 'A': /* actions for A */ break; case 'B': /* actions for B */ break; default: /* default actions */ }
158,Define a function to calculate the area of a circle.,"function calculateCircleArea(radius) { return Math.PI * Math.pow(radius, 2); }"
159,Call a function to display a modal dialog.,displayModal('This is a message.');
160,Create a function that converts a string to uppercase.,function convertToUpperCase(str) { return str.toUpperCase(); }
161,Create an object representing a smartphone.,"const smartphone = { brand: 'Samsung', model: 'Galaxy S21' };"
162,Access a property of a smartphone object.,const smartphoneBrand = smartphone.brand;
163,Create an array of vegetable names.,"const vegetables = ['Carrot', 'Broccoli', 'Spinach'];"
164,Access the eleventh element in an array.,const eleventhVegetable = vegetables[10];
165,Check if a string is empty (contains no characters).,const isEmptyString = str => str.trim().length === 0;
166,Iterate through an array and find the average of all elements.,"const average = arrayOfNumbers.reduce((total, num) => total + num, 0) / arrayOfNumbers.length;"
167,Execute a block of code asynchronously using Promises.,async function asyncFunction() { try { await someAsyncTask(); /* actions on success */ } catch (error) { /* actions on error */ } }
168,Define a function to generate a random number within a range.,"function generateRandomNumber(min, max) { return Math.random() * (max - min) + min; }"
169,Call a function to make an AJAX request to a server.,"makeAjaxRequest('GET', 'https://api.example.com/data', handleResponse);"
170,Create a function that reverses a string.,function reverseString(str) { return str.split('').reverse().join(''); }
171,Create an object representing a car.,"const car = { make: 'Toyota', model: 'Camry', year: 2020 };"
172,Access a property of a car object.,const carMake = car.make;
173,Create an array of color names.,"const colors = ['Red', 'Blue', 'Green'];"
174,Access the twelfth element in an array.,const twelfthColor = colors[11];
175,Check if a variable is undefined.,const isUndefined = (variable) => typeof variable === 'undefined';
176,Iterate through an array and filter elements based on a condition.,const filteredArray = arrayOfNumbers.filter(num => num > 10);
177,Execute a block of code repeatedly using a loop.,for (let i = 0; i < count; i++) { /* code to execute */ }
178,Define a function to calculate the factorial of a number.,```function factorial(num) { if (num === 0
179,Call a function with multiple arguments.,"myFunction(arg1, arg2, arg3);"
180,Create a function that calculates the square of a number.,function calculateSquare(num) { return num * num; }
181,Create an object representing a book.,"const book = { title: 'JavaScript Basics', author: 'John Doe', publishedYear: 2022 };"
182,Access a property of a book object.,const bookTitle = book.title;
183,Create an array of country names.,"const countries = ['USA', 'Canada', 'Australia'];"
184,Access the thirteenth element in an array.,const thirteenthCountry = countries[12];
185,Check if a given string contains a specific substring.,"const containsSubstring = (str, substring) => str.includes(substring);"
186,Iterate through an array and perform an operation on each element.,const modifiedArray = arrayOfNumbers.map(num => num * 2);
187,Execute a block of code based on a condition (if-else statement).,if (condition) { /* actions if condition is true */ } else { /* actions if condition is false */ }
188,Define a function to find the maximum of two numbers.,"function findMaximum(a, b) { return a > b ? a : b; }"
189,Call a function to log a message to the console.,logToConsole('This is a message.');
190,Create a function that trims leading and trailing spaces from a string.,function trimString(str) { return str.trim(); }
191,Create an object representing a laptop.,"const laptop = { brand: 'Dell', model: 'XPS 15' };"
192,Access a property of a laptop object.,const laptopBrand = laptop.brand;
193,Create an array of programming languages.,"const languages = ['JavaScript', 'Python', 'Java'];"
194,Access the fourteenth element in an array.,const fourteenthLanguage = languages[13];
195,Check if a given number is even.,const isEven = (num) => num % 2 === 0;
196,Iterate through an array and sum all the elements.,"const sum = arrayOfNumbers.reduce((total, num) => total + num, 0);"
197,Execute a block of code repeatedly using a while loop.,while (condition) { /* code to execute */ }
198,Define a function to calculate the area of a circle.,function calculateCircleArea(radius) { return Math.PI * radius * radius; }
199,Call a function to display a message in an alert box.,alert('This is an alert message.');
200,Create a function that sorts an array in ascending order.,"function sortArrayAscending(arr) { return arr.sort((a, b) => a - b); }"
201,Create an object representing a smartphone.,"const smartphone = { brand: 'Samsung', model: 'Galaxy S21' };"
202,Access a property of a smartphone object.,const smartphoneBrand = smartphone.brand;
203,Create an array of vegetable names.,"const vegetables = ['Carrot', 'Broccoli', 'Spinach'];"
204,Access the fifteenth element in an array.,const fifteenthVegetable = vegetables[14];
205,Check if a given number is prime.,const isPrime = (num) => { if (num <= 1) return false; if (num === 2) return true; for (let i = 2; i <= Math.sqrt(num); i++) { if (num % i === 0) return false; } return true; };
206,Iterate through an array and find the largest element.,const largestElement = Math.max(...arrayOfNumbers);
207,Execute a block of code repeatedly using a do-while loop.,do { /* code to execute */ } while (condition);
208,Define a function to calculate the power of a number.,"function calculatePower(base, exponent) { return Math.pow(base, exponent); }"
209,Call a function to perform a specific action.,performAction();
210,Create a function that converts Celsius to Fahrenheit.,function celsiusToFahrenheit(celsius) { return (celsius * 9/5) + 32; }
211,Create an object representing a car.,"const car = { make: 'Toyota', model: 'Corolla' };"
212,Access a property of a car object.,const carMake = car.make;
213,Create an array of color names.,"const colors = ['Red', 'Green', 'Blue'];"
214,Access the sixteenth element in an array.,const sixteenthColor = colors[15];
215,Check if a given number is a multiple of another number.,"const isMultiple = (num, multipleOf) => num % multipleOf === 0;"
216,Iterate through an array and filter out elements based on a condition.,const filteredArray = arrayOfNumbers.filter(num => num > 10);
217,Execute a block of code based on multiple conditions (if-else if-else).,if (condition1) { /* actions if condition1 is true */ } else if (condition2) { /* actions if condition2 is true */ } else { /* actions if all conditions are false */ }
218,Define a function to calculate the factorial of a number.,```function factorial(num) { if (num === 0
219,Call a function to add two numbers and return the result.,"const sum = addNumbers(5, 10);"
220,Create a function that reverses a string.,function reverseString(str) { return str.split('').reverse().join(''); }
221,Create an object representing a book.,"const book = { title: 'The Great Gatsby', author: 'F. Scott Fitzgerald' };"
222,Access a property of a book object.,const bookTitle = book.title;
223,Create an array of country names.,"const countries = ['USA', 'Canada', 'Australia'];"
224,Access the seventeenth element in an array.,const seventeenthCountry = countries[16];
225,Check if a given string is a palindrome.,const isPalindrome = (str) => str === str.split('').reverse().join('');
226,Iterate through an array and find the smallest element.,const smallestElement = Math.min(...arrayOfNumbers);
227,Execute a block of code based on a switch case.,switch (expression) { case value1: /* code if expression equals value1 */ break; case value2: /* code if expression equals value2 */ break; default: /* code if expression doesn't match any case */ }
228,Define a function to calculate the area of a rectangle.,"function calculateRectangleArea(length, width) { return length * width; }"
229,Call a function to display a message in the console.,console.log('This is a console log message.');
230,Create a function that finds the longest word in a sentence.,function findLongestWord(sentence) { const words = sentence.split(' '); let longestWord = ''; for (const word of words) { if (word.length > longestWord.length) longestWord = word; } return longestWord; }
231,Create an object representing a laptop.,"const laptop = { brand: 'Dell', model: 'XPS 13' };"
232,Access a property of a laptop object.,const laptopBrand = laptop.brand;
233,Create an array of city names.,"const cities = ['New York', 'London', 'Tokyo'];"
234,Access the eighteenth element in an array.,const eighteenthCity = cities[17];
235,Check if a given number is even.,const isEven = (num) => num % 2 === 0;
236,Iterate through an array and perform an operation on each element.,const newArray = arrayOfNumbers.map(num => num * 2);
237,Execute a block of code based on a while loop.,while (condition) { /* code to execute */ }
238,Define a function to calculate the perimeter of a rectangle.,"function calculateRectanglePerimeter(length, width) { return 2 * (length + width); }"
239,Call a function to fetch data from an API.,const fetchData = async () => { const response = await fetch('https://api.example.com/data'); const data = await response.json(); return data; };
240,Create a function that sorts an array in ascending order.,"function sortArrayAscending(arr) { return arr.slice().sort((a, b) => a - b); }"
241,Create an object representing a smartphone.,"const smartphone = { brand: 'Samsung', model: 'Galaxy S20' };"
242,Access a property of a smartphone object.,const smartphoneModel = smartphone.model;
243,Create an array of fruit names.,"const fruits = ['Apple', 'Banana', 'Orange'];"
244,Access the nineteenth element in an array.,const nineteenthFruit = fruits[18];
245,Check if a given year is a leap year.,```const isLeapYear = (year) => (year % 4 === 0 && year % 100 !== 0)
246,Iterate through an array and find the sum of its elements.,"const sum = arrayOfNumbers.reduce((acc, num) => acc + num, 0);"
247,Execute a block of code based on a for loop.,for (let i = 0; i < array.length; i++) { /* code to execute */ }
248,Define a function to calculate the volume of a sphere.,"function calculateSphereVolume(radius) { return (4 / 3) * Math.PI * Math.pow(radius, 3); }"
249,Call a function to send an HTTP request.,"function sendHTTPRequest(url, method, data) { /* code to send HTTP request */ }"
250,Create a function that finds the maximum value in an array.,function findMaxValue(arr) { return Math.max(...arr); }
251,Create an object representing a car.,"const car = { make: 'Toyota', model: 'Corolla' };"
252,Access a property of a car object.,const carMake = car.make;
253,Create an array of programming languages.,"const programmingLanguages = ['JavaScript', 'Python', 'Java'];"
254,Access the twentieth element in an array.,const twentiethLanguage = programmingLanguages[19];
255,Check if a given number is a prime number.,```const isPrime = (num) => { if (num <= 1) return false; if (num <= 3) return true; if (num % 2 === 0
256,Iterate through an array and filter out elements based on a condition.,const filteredArray = arrayOfNumbers.filter(num => num > 10);
257,Execute a block of code based on a do-while loop.,do { /* code to execute */ } while (condition);
258,Define a function to calculate the factorial of a number.,function calculateFactorial(num) { if (num < 0) return -1; else if (num === 0) return 1; else return num * calculateFactorial(num - 1); }
259,Call a function to display an alert.,alert('This is an alert message.');
260,Create a function that reverses a string.,function reverseString(str) { return str.split('').reverse().join(''); }
261,Create an object representing a book.,"const book = { title: 'To Kill a Mockingbird', author: 'Harper Lee' };"
262,Access a property of a book object.,const bookTitle = book.title;
263,Create an array of animal names.,"const animals = ['Lion', 'Elephant', 'Giraffe'];"
264,Access the twenty-first element in an array.,const twentyFirstAnimal = animals[20];
265,Check if a string is a palindrome.,const isPalindrome = (str) => str === str.split('').reverse().join('');
266,Iterate through an array and perform an action on each element.,arrayOfElements.forEach(element => { /* code to perform action on each element */ });
267,Execute a block of code based on a switch statement.,switch (variable) { case value1: /* code */ break; case value2: /* code */ break; default: /* code */ }
268,Define a function to calculate the area of a rectangle.,"function calculateRectangleArea(length, width) { return length * width; }"
269,Call a function to add an event listener to an HTML element.,"element.addEventListener('click', () => { /* code to handle the event */ });"
270,Create a function that sorts an array in ascending order.,"function sortArrayAscending(arr) { return arr.slice().sort((a, b) => a - b); }"
271,Create an object representing a movie.,"const movie = { title: 'Inception', director: 'Christopher Nolan' };"
272,Access a property of a movie object.,const movieDirector = movie.director;
273,Create an array of fruit names.,"const fruits = ['Apple', 'Banana', 'Orange'];"
274,Access the last element in an array.,const lastFruit = fruits[fruits.length - 1];
275,Check if a number is even or odd.,const isEven = (num) => num % 2 === 0; const isOdd = (num) => num % 2 !== 0;
276,Iterate through an object and print its properties and values.,for (let key in myObject) { console.log(`${key}: ${myObject[key]}`); }
277,Execute a block of code based on a try-catch statement.,try { /* code that may throw an error */ } catch (error) { /* code to handle the error */ }
278,Define a function to calculate the sum of an array of numbers.,"function calculateSum(numbers) { return numbers.reduce((sum, num) => sum + num, 0); }"
279,Call a function to fetch data from an API.,"fetch('https://api.example.com/data') .then(response => response.json()) .then(data => console.log(data)) .catch(error => console.error('Error fetching data:', error));"
280,Create a function that finds the largest number in an array.,function findLargestNumber(numbers) { return Math.max(...numbers); }
281,Create an object representing a car.,"const car = { make: 'Toyota', model: 'Camry', year: 2022 };"
282,Access a property of a car object.,const carMake = car.make;
283,Create an array of city names.,"const cities = ['New York', 'Los Angeles', 'Chicago'];"
284,Access the second element in an array.,const secondCity = cities[1];
285,Check if a number is prime.,"const isPrime = (num) => { for(let i = 2, sqrt = Math.sqrt(num); i <= sqrt; i++) { if(num % i === 0) return false; } return num > 1; }"
286,Iterate through an array and modify each element.,const modifiedArray = originalArray.map(element => { /* modify each element */ return modifiedElement; });
287,Execute a block of code repeatedly with a setInterval.,"const intervalId = setInterval(() => { /* code to execute repeatedly */ }, 1000);"
288,Define a function to calculate the factorial of a number.,```function factorial(num) { if(num === 0
289,Call a function when a button is clicked.,"const button = document.getElementById('myButton'); button.addEventListener('click', myFunction);"
290,Create a function that reverses a string.,function reverseString(str) { return str.split('').reverse().join(''); }
291,Create an object representing a person.,"const person = { firstName: 'John', lastName: 'Doe', age: 30 };"
292,Access a property of a person object.,const personAge = person.age;
293,Create an array of programming languages.,"const programmingLanguages = ['JavaScript', 'Python', 'Java'];"
294,Access the first element in an array.,const firstLanguage = programmingLanguages[0];
295,Check if a string is a palindrome.,const isPalindrome = (str) => str === str.split('').reverse().join('');
296,Iterate through an array and filter out specific elements.,const filteredArray = originalArray.filter(element => { /* condition to filter elements */ return true; });
297,Execute a block of code after a delay with a setTimeout.,"setTimeout(() => { /* code to execute after the delay */ }, 2000);"
298,Define a function to generate a random number within a range.,"function getRandomNumber(min, max) { return Math.floor(Math.random() * (max - min + 1)) + min; }"
299,Create an event listener for a button click.,"const button = document.getElementById('myButton'); button.addEventListener('click', () => { /* code to execute on click */ });"
300,Create a function that sorts an array in ascending order.,"function sortArrayAscending(arr) { return arr.slice().sort((a, b) => a - b); }"
301,Create an object representing a book.,"const book = { title: 'The Great Gatsby', author: 'F. Scott Fitzgerald', year: 1925 };"
302,Access a property of a book object.,const bookTitle = book.title;
303,Create an array of movie titles.,"const movies = ['Inception', 'The Shawshank Redemption', 'Forrest Gump'];"
304,Access the third element in an array.,const thirdMovie = movies[2];